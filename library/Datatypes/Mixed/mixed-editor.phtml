<?php
/**
 * This source file is part of GotCms.
 *
 * GotCms is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * GotCms is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License along
 * with GotCms. If not, see <http://www.gnu.org/licenses/lgpl-3.0.html>.
 *
 * PHP Version >=5.3
 *
 * @category   Gc_Library
 * @package    Datatypes
 * @subpackage Mixed
 * @author     Pierre Rambaud (GoT) <pierre.rambaud86@gmail.com>
 * @license    GNU/LGPL http://www.gnu.org/licenses/lgpl-3.0.html
 * @link       http://www.got-cms.com
 */
 /** @var $this \Zend\View\Renderer\PhpRenderer */

?>

<div class="col-lg-2">
    <label><?php echo $this->escapeHtml($this->property->getName()); ?></label>
    <?php if ($this->property->isRequired()): ?>
        <p class="text-danger pull-right">(<?php echo $this->escapeHtml($this->translate('Mandatory')); ?>)</p>
    <?php endif; ?>

    <?php if ($this->property->getDescription()): ?>
        <p class="help-block"><?php echo $this->escapeHtml($this->translate($this->property->getDescription())); ?></p>
    <?php endif; ?>
</div>
<div class="col-lg-10">
    <div class="floatL">
        <div id="elements-<?php echo $this->escapeHtml($this->propertyName); ?>">
            <?php if (!empty($this->datatypes)): ?>
                <?php foreach ($this->datatypes as $line_id => $values): ?>
                    <div class="mixed-element">
                        <i class="glyphicon glyphicon-move"></i>
                        <?php foreach ($values as $datatype_id => $datatype): ?>
                            <?php foreach ($datatype['fieldset']->getElements() as $element): ?>
                                <div class="clearfix">
                                    <?php $content = $element->getAttribute('content'); ?>
                                    <?php if (!empty($content)): ?>
                                        <?php echo $content; ?>
                                    <?php else: ?>
                                        <?php if ($element->getAttribute('type') == 'hidden'): ?>
                                            <?php echo $this->formElement($element); ?>
                                        <?php else: ?>
                                            <div class="form-group">
                                                <?php $id = $element->getAttribute('id'); ?>
                                                <?php if (!empty($id)): ?>
                                                    <label class="control-label col-lg-2 required" for="<?php echo $this->escapeHtml($this->translate($element->getAttribute('id'))); ?>"><?php echo $this->escapeHtml($this->translate($datatype['label'])); ?></label>
                                                <?php endif; ?>

                                                <div class="col-lg-10">
                                                    <?php echo $this->formElement($element); ?>
                                                </div>
                                            </div>
                                        <?php endif; ?>
                                    <?php endif; ?>
                                </div>
                            <?php endforeach; ?>
                        <?php endforeach; ?>
                        <div>
                            <button class="delete-mixed-element<?php echo $this->propertyName; ?> btn btn-danger">
                                <i class="glyphicon glyphicon-remove"></i>
                                <?php echo $this->escapeHtml($this->translate('Delete')); ?>
                            </button>
                        </div>
                    </div>
                <?php endforeach; ?>
            <?php endif; ?>
        </div>
        <div>
            <button class="btn btn-warning" id="add-element-<?php echo $this->escapeHtml($this->propertyName); ?>">
                <i class="glyphicon glyphicon-plus"></i>
                <?php echo $this->escapeHtml($this->translate('Add')); ?>
            </button>
        </div>
    </div>

    <script type="text/javascript">
        $line_id<?php echo $this->escapeHtml($this->propertyName); ?> = <?php echo count($this->datatypes); ?>;
        $('#add-element-<?php echo $this->escapeHtml($this->propertyName); ?>').on('click', function () {
            var $template = '';
            $template += '<div class="mixed-element">';
                $template += '<i class="glyphicon glyphicon-move"></i>';
                <?php foreach ($this->templateElements as $datatype_id => $datatype): ?>
                    <?php foreach ($datatype['fieldset']->getElements() as $element): ?>
                        $template += '<div>';
                            <?php $content = $element->getAttribute('content'); ?>
                            <?php if (!empty($content)): ?>
                                $template += '<?php echo $this->escapeJs($content); ?>';
                            <?php else: ?>
                                <?php if ($element->getAttribute('type') == 'hidden'): ?>
                                    $template += '<?php echo $this->formElement($element); ?>';
                                <?php else: ?>
                                    $template += '<div class="form-group">';
                                        <?php $id = $element->getAttribute('id'); ?>
                                        <?php if (!empty($id)): ?>
                                            $template += '<label class="control-label col-lg-2 required" for="<?php echo $this->escapeHtml($this->translate($element->getAttribute('id'))); ?>"><?php echo $this->escapeHtml($this->translate($datatype['label'])); ?></label>';
                                        <?php endif; ?>

                                        $template += '<div class="col-lg-10">';
                                            $template += '<?php echo $this->formElement($element); ?>';
                                        $template += '</div>';
                                    $template += '</div>';
                                <?php endif; ?>
                            <?php endif; ?>
                        $template += '</div>';
                    <?php endforeach; ?>
                <?php endforeach; ?>
                $template += '<div>';
                    $template += '<button class="delete-mixed-element<?php echo $this->propertyName; ?> btn btn-danger">';
                        $template += '<i class="glyphicon glyphicon-remove"></i> ';
                        $template += '<?php echo $this->escapeHtml($this->translate('Delete')); ?>';
                    $template += '</button>';
                $template += '</div>';
            $template += '</div>';

            $template = new Template($template);
            $content = $($template.evaluate({line: $line_id<?php echo $this->escapeHtml($this->propertyName); ?>}));

            $line_id<?php echo $this->escapeHtml($this->propertyName); ?>++;
            $('#elements-<?php echo $this->escapeHtml($this->propertyName); ?>').append($content)
            .sortable('refresh');

            return false;
        });

        $(document).on('click', '.delete-mixed-element<?php echo $this->propertyName; ?>', function () {
            $(this).closest('.mixed-element').remove();

            return false;
        });

        var ckeConfigs<?php echo $this->escapeHtml($this->propertyName); ?> = [];
        $('#elements-<?php echo $this->escapeHtml($this->propertyName); ?>').sortable({
            placeholder: "ui-state-highlight",
            start: function(event, ui) {
                $originalPosition = ui.item.index();
                $(this).find('.ui-state-highlight').height(ui.item.height() - 4);
                //Check if there're textrich and destroy ckeditor for short time
                $('textarea[class*="textrich"]', ui.item).each(function(){
                    var tagId         = $(this).attr('id');
                    var ckeClone      = $(this).next('.cke').clone().addClass('cloned');
                    ckeConfigs<?php echo $this->escapeHtml($this->propertyName); ?>[tagId] = CKEDITOR.instances[tagId].config;
                    CKEDITOR.instances[tagId].destroy();
                    $(this).hide().after(ckeClone);
                });
            },
            stop: function(event, ui) {
                //Check if there're textrich and restore ckeditor
                $('textarea[class*="textrich"]', ui.item).each(function(){
                    var tagId = $(this).attr('id');
                    CKEDITOR.replace(tagId, ckeConfigs<?php echo $this->escapeHtml($this->propertyName); ?>[tagId]);
                    $(this).next('.cloned').remove();
                });
            }
        });
    </script>
</div>
