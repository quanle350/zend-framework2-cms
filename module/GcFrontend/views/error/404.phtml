<?php
/**
 * This source file is part of GotCms.
 *
 * GotCms is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * GotCms is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License along
 * with GotCms. If not, see <http://www.gnu.org/licenses/lgpl-3.0.html>.
 *
 * PHP Version >=5.3
 *
 * @category    Gc
 * @package     Application
 * @subpackage  Design
 * @author      Pierre Rambaud (GoT) <pierre.rambaud86@gmail.com>
 * @license     GNU/LGPL http://www.gnu.org/licenses/lgpl-3.0.html
 * @link        http://www.got-cms.com
 */

 /** @var $this \Zend\View\Renderer\PhpRenderer */

?>

<h1><?php echo $this->translate('A 404 error occurred') ?></h1>
<h2><?php echo $this->message ?></h2>

<?php if (isset($this->reason) and $this->reason): ?>
    <?php
    $reason_message= '';
    switch ($this->reason) {
        case 'error-controller-cannot-dispatch':
            $reason_message = $this->translate('The requested controller was unable to dispatch the request.');
        break;

        case 'error-controller-not-found':
            $reason_message = $this->translate('The requested controller could not be mapped to an existing controller class.');
        break;

        case 'error-controller-invalid':
            $reason_message = $this->translate('The requested controller was not dispatchable.');
        break;

        case 'error-router-no-match':
            $reason_message = $this->translate('The requested URL could not be matched by routing.');
        break;

        default:
            $reason_message = $this->translate('We cannot determine at this time why a 404 was generated.');
        break;
    }
    ?>

    <p><?php echo $reason_message ?></p>
<?php endif ?>

<?php if (isset($this->controller) and $this->controller != 'IndexController'): ?>
    <dl>
        <dt><?php echo $this->translate('Controller') ?>:</dt>
        <dd><?php echo $this->escapeHtml($this->controller) ?>
        <?php
        if (isset($this->controller_class) and $this->controller_class and $this->controller_class != $this->controller) {
            echo '(' . sprintf($this->translate('resolves to %s'), $this->escapeHtml($this->controller_class)) . ')';
        }
        ?>
        </dd>
    </dl>
<?php endif ?>

<?php if (isset($this->display_exceptions) and $this->display_exceptions): ?>
    <?php if (isset($this->exception) and $this->exception instanceof Exception): ?>
        <hr/>
        <h2><?php echo $this->translate('Additional information') ?>:</h2>
        <h3><?php echo get_class($this->exception); ?></h3>
        <dl>
            <dt><?php echo $this->translate('File') ?>:</dt>
            <dd>
                <pre class="prettyprint linenums"><?php echo $this->exception->getFile() ?>:<?php echo $this->exception->getLine() ?></pre>
            </dd>
            <dt><?php echo $this->translate('Message') ?>:</dt>
            <dd>
                <pre class="prettyprint linenums"><?php echo $this->exception->getMessage() ?></pre>
            </dd>
            <dt><?php echo $this->translate('Stack trace') ?>:</dt>
            <dd>
                <pre class="prettyprint linenums"><?php echo $this->exception->getTraceAsString() ?></pre>
            </dd>
        </dl>
        <?php $e = $this->exception->getPrevious(); ?>

        <?php if ($e): ?>
            <hr/>
            <h2><?php echo $this->translate('Previous exceptions') ?>:</h2>
            <ul class="unstyled">
                <?php while($e): ?>
                <li>
                    <h3><?php echo get_class($e); ?></h3>
                    <dl>
                        <dt><?php echo $this->translate('File') ?>:</dt>
                        <dd>
                            <pre class="prettyprint linenums"><?php echo $e->getFile() ?>:<?php echo $e->getLine() ?></pre>
                        </dd>
                        <dt><?php echo $this->translate('Message') ?>:</dt>
                        <dd>
                            <pre class="prettyprint linenums"><?php echo $e->getMessage() ?></pre>
                        </dd>
                        <dt><?php echo $this->translate('Stack trace') ?>:</dt>
                        <dd>
                            <pre class="prettyprint linenums"><?php echo $e->getTraceAsString() ?></pre>
                        </dd>
                    </dl>
                </li>
                <?php
                    $e = $e->getPrevious();
                    endwhile;
                ?>
            </ul>
        <?php endif; ?>
    <?php else: ?>
        <h3><?php echo $this->translate('No Exception available') ?></h3>
    <?php endif ?>
<?php endif ?>
